package com.example.backendlaptop.service.banhang;

import com.example.backendlaptop.dto.banhang.ApDungVoucherRequest;
import com.example.backendlaptop.dto.banhang.HoaDonResponse;
import com.example.backendlaptop.dto.banhang.VoucherSuggestionResponse;
import com.example.backendlaptop.entity.HoaDon;
import com.example.backendlaptop.entity.PhieuGiamGia;
import com.example.backendlaptop.expection.ApiException;
import com.example.backendlaptop.model.TrangThaiHoaDon;
import com.example.backendlaptop.repository.PhieuGiamGiaRepository;
import jakarta.transaction.Transactional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;
import java.time.Instant;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

/**
 * Service qu·∫£n l√Ω khuy·∫øn m√£i/voucher cho h√≥a ƒë∆°n
 * Nhi·ªám v·ª•: G·ª£i √Ω voucher, √°p d·ª•ng voucher, x√≥a voucher
 */
@Service
public class KhuyenMaiService {

    @Autowired
    private PhieuGiamGiaRepository phieuGiamGiaRepository;

    @Autowired
    private BanHangHoaDonService hoaDonService;

    /**
     * G·ª£i √Ω Voucher/Khuy·∫øn m√£i cho h√≥a ƒë∆°n hi·ªán t·∫°i
     * Logic: T√¨m t·∫•t c·∫£ voucher/khuy·∫øn m√£i h·ª£p l·ªá d·ª±a tr√™n:
     * - T·ªïng ti·ªÅn h√≥a ƒë∆°n
     * - ID kh√°ch h√†ng (cho voucher ri√™ng t∆∞)
     * - Ng√†y hi·ªáu l·ª±c
     * - S·ªë l∆∞·ª£ng c√≤n l·∫°i
     * - Tr·∫°ng th√°i
     */
    public List<VoucherSuggestionResponse> getVoucherSuggestions(UUID idHoaDon) {
        System.out.println("üîç [KhuyenMaiService] L·∫•y g·ª£i √Ω voucher cho h√≥a ƒë∆°n: " + idHoaDon);
        
        // 1. T√¨m h√≥a ƒë∆°n
        HoaDon hoaDon = hoaDonService.findById(idHoaDon);
        
        // 2. L·∫•y th√¥ng tin c·∫ßn thi·∫øt
        BigDecimal tongTien = hoaDon.getTongTien() != null ? hoaDon.getTongTien() : BigDecimal.ZERO;
        UUID idKhachHang = hoaDon.getIdKhachHang() != null ? hoaDon.getIdKhachHang().getId() : null;
        Instant now = Instant.now();
        
        System.out.println("  - T·ªïng ti·ªÅn h√≥a ƒë∆°n: " + tongTien);
        System.out.println("  - ID kh√°ch h√†ng: " + idKhachHang);
        
        // 3. L·∫•y danh s√°ch PhieuGiamGia h·ª£p l·ªá
        List<PhieuGiamGia> phieuGiamGias = phieuGiamGiaRepository.findAll();
        
        List<VoucherSuggestionResponse> suggestions = phieuGiamGias.stream()
                .filter(pgg -> {
                    // Ki·ªÉm tra tr·∫°ng th√°i (1 = Ho·∫°t ƒë·ªông)
                    if (pgg.getTrangThai() == null || pgg.getTrangThai() != 1) {
                        return false;
                    }
                    
                    // Ki·ªÉm tra ng√†y hi·ªáu l·ª±c
                    if (pgg.getNgayBatDau() != null && pgg.getNgayBatDau().isAfter(now)) {
                        return false; // Ch∆∞a ƒë·∫øn ng√†y b·∫Øt ƒë·∫ßu
                    }
                    if (pgg.getNgayKetThuc() != null && pgg.getNgayKetThuc().isBefore(now)) {
                        return false; // ƒê√£ h·∫øt h·∫°n
                    }
                    
                    // Ki·ªÉm tra s·ªë l∆∞·ª£ng c√≤n l·∫°i
                    if (pgg.getSoLuongDung() != null && pgg.getSoLuongDung() <= 0) {
                        return false; // H·∫øt l∆∞·ª£t s·ª≠ d·ª•ng
                    }
                    
                    // Ki·ªÉm tra ƒëi·ªÅu ki·ªán h√≥a ƒë∆°n t·ªëi thi·ªÉu
                    if (pgg.getHoaDonToiThieu() != null && tongTien.compareTo(pgg.getHoaDonToiThieu()) < 0) {
                        return false; // T·ªïng ti·ªÅn ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán
                    }
                    
                    // Ki·ªÉm tra voucher ri√™ng t∆∞
                    if (Boolean.TRUE.equals(pgg.getRiengTu())) {
                        // Voucher ri√™ng t∆∞ - ch·ªâ √°p d·ª•ng cho kh√°ch h√†ng c·ª• th·ªÉ
                        // TODO: N·∫øu c√≥ b·∫£ng li√™n k·∫øt PhieuGiamGia v·ªõi KhachHang, ki·ªÉm tra ·ªü ƒë√¢y
                        if (idKhachHang == null) {
                            return false; // Kh√°ch l·∫ª kh√¥ng d√πng ƒë∆∞·ª£c voucher ri√™ng t∆∞
                        }
                    }
                    
                    return true;
                })
                .map(pgg -> VoucherSuggestionResponse.fromPhieuGiamGia(pgg, tongTien))
                .collect(Collectors.toList());
        
        // S·∫Øp x·∫øp theo s·ªë ti·ªÅn gi·∫£m d·ª± ki·∫øn (gi·∫£m d·∫ßn)
        suggestions.sort((a, b) -> {
            BigDecimal tienGiamA = a.getTienGiamDuKien() != null ? a.getTienGiamDuKien() : BigDecimal.ZERO;
            BigDecimal tienGiamB = b.getTienGiamDuKien() != null ? b.getTienGiamDuKien() : BigDecimal.ZERO;
            return tienGiamB.compareTo(tienGiamA); // Gi·∫£m d·∫ßn
        });
        
        System.out.println("‚úÖ [KhuyenMaiService] T√¨m th·∫•y " + suggestions.size() + " voucher h·ª£p l·ªá");
        
        return suggestions;
    }
    
    /**
     * √Åp d·ª•ng Voucher/Phi·∫øu gi·∫£m gi√° v√†o h√≥a ƒë∆°n
     * Logic:
     * 1. Ki·ªÉm tra voucher h·ª£p l·ªá
     * 2. T√≠nh to√°n s·ªë ti·ªÅn gi·∫£m
     * 3. C·∫≠p nh·∫≠t h√≥a ƒë∆°n: idPhieuGiamGia, tienDuocGiam, tongTienSauGiam
     * 4. Gi·∫£m soLuongDung c·ªßa voucher
     */
    @Transactional
    public HoaDonResponse apDungVoucher(UUID idHoaDon, ApDungVoucherRequest request) {
        System.out.println("üéüÔ∏è [KhuyenMaiService] √Åp d·ª•ng voucher cho h√≥a ƒë∆°n: " + idHoaDon);
        System.out.println("  - ID Voucher: " + request.getIdPhieuGiamGia());
        
        // 1. T√¨m h√≥a ƒë∆°n
        HoaDon hoaDon = hoaDonService.findById(idHoaDon);
        
        // 2. Ki·ªÉm tra tr·∫°ng th√°i h√≥a ƒë∆°n
        if (hoaDon.getTrangThai() != TrangThaiHoaDon.CHO_THANH_TOAN) {
            throw new ApiException("Ch·ªâ c√≥ th·ªÉ √°p d·ª•ng voucher cho h√≥a ƒë∆°n ƒëang ch·ªù thanh to√°n", "INVALID_STATUS");
        }
        
        // 3. T√¨m voucher
        PhieuGiamGia phieuGiamGia = phieuGiamGiaRepository.findById(request.getIdPhieuGiamGia())
                .orElseThrow(() -> new ApiException("Kh√¥ng t√¨m th·∫•y phi·∫øu gi·∫£m gi√° v·ªõi ID: " + request.getIdPhieuGiamGia(), "NOT_FOUND"));
        
        // 4. Ki·ªÉm tra voucher h·ª£p l·ªá
        validateVoucher(phieuGiamGia, hoaDon);
        
        // 5. T√≠nh to√°n s·ªë ti·ªÅn gi·∫£m
        BigDecimal tongTien = hoaDon.getTongTien() != null ? hoaDon.getTongTien() : BigDecimal.ZERO;
        BigDecimal tienDuocGiam = calculateTienGiam(phieuGiamGia, tongTien);
        
        System.out.println("  - T·ªïng ti·ªÅn h√≥a ƒë∆°n: " + tongTien);
        System.out.println("  - S·ªë ti·ªÅn gi·∫£m: " + tienDuocGiam);
        
        // 6. C·∫≠p nh·∫≠t h√≥a ƒë∆°n
        hoaDon.setIdPhieuGiamGia(phieuGiamGia);
        hoaDon.setTienDuocGiam(tienDuocGiam);
        
        // T√≠nh l·∫°i t·ªïng ti·ªÅn sau gi·∫£m
        BigDecimal tongTienSauGiam = tongTien.subtract(tienDuocGiam);
        if (tongTienSauGiam.compareTo(BigDecimal.ZERO) < 0) {
            tongTienSauGiam = BigDecimal.ZERO; // Kh√¥ng ƒë∆∞·ª£c √¢m
        }
        hoaDon.setTongTienSauGiam(tongTienSauGiam);
        
        // 7. Gi·∫£m s·ªë l∆∞·ª£ng s·ª≠ d·ª•ng c·ªßa voucher
        if (phieuGiamGia.getSoLuongDung() != null && phieuGiamGia.getSoLuongDung() > 0) {
            phieuGiamGia.setSoLuongDung(phieuGiamGia.getSoLuongDung() - 1);
            phieuGiamGiaRepository.save(phieuGiamGia);
        }
        
        // 8. L∆∞u h√≥a ƒë∆°n
        hoaDonService.save(hoaDon);
        
        System.out.println("‚úÖ [KhuyenMaiService] √Åp d·ª•ng voucher th√†nh c√¥ng!");
        
        return new HoaDonResponse(hoaDonService.findById(idHoaDon));
    }
    
    /**
     * X√≥a voucher kh·ªèi h√≥a ƒë∆°n
     */
    @Transactional
    public HoaDonResponse xoaVoucher(UUID idHoaDon) {
        System.out.println("üóëÔ∏è [KhuyenMaiService] X√≥a voucher kh·ªèi h√≥a ƒë∆°n: " + idHoaDon);
        
        // 1. T√¨m h√≥a ƒë∆°n
        HoaDon hoaDon = hoaDonService.findById(idHoaDon);
        
        // 2. Ki·ªÉm tra tr·∫°ng th√°i
        if (hoaDon.getTrangThai() != TrangThaiHoaDon.CHO_THANH_TOAN) {
            throw new ApiException("Ch·ªâ c√≥ th·ªÉ x√≥a voucher kh·ªèi h√≥a ƒë∆°n ƒëang ch·ªù thanh to√°n", "INVALID_STATUS");
        }
        
        // 3. Ho√†n tr·∫£ s·ªë l∆∞·ª£ng voucher (n·∫øu c√≥)
        if (hoaDon.getIdPhieuGiamGia() != null) {
            PhieuGiamGia pgg = hoaDon.getIdPhieuGiamGia();
            if (pgg.getSoLuongDung() != null) {
                pgg.setSoLuongDung(pgg.getSoLuongDung() + 1);
                phieuGiamGiaRepository.save(pgg);
            }
        }
        
        // 4. X√≥a voucher kh·ªèi h√≥a ƒë∆°n
        hoaDon.setIdPhieuGiamGia(null);
        hoaDon.setTienDuocGiam(BigDecimal.ZERO);
        
        // T√≠nh l·∫°i t·ªïng ti·ªÅn sau gi·∫£m
        BigDecimal tongTien = hoaDon.getTongTien() != null ? hoaDon.getTongTien() : BigDecimal.ZERO;
        hoaDon.setTongTienSauGiam(tongTien);
        
        // 5. L∆∞u h√≥a ƒë∆°n
        hoaDonService.save(hoaDon);
        
        System.out.println("‚úÖ [KhuyenMaiService] X√≥a voucher th√†nh c√¥ng!");
        
        return new HoaDonResponse(hoaDonService.findById(idHoaDon));
    }
    
    /**
     * Validate voucher c√≥ th·ªÉ √°p d·ª•ng cho h√≥a ƒë∆°n hay kh√¥ng
     */
    private void validateVoucher(PhieuGiamGia phieuGiamGia, HoaDon hoaDon) {
        Instant now = Instant.now();
        BigDecimal tongTien = hoaDon.getTongTien() != null ? hoaDon.getTongTien() : BigDecimal.ZERO;
        UUID idKhachHang = hoaDon.getIdKhachHang() != null ? hoaDon.getIdKhachHang().getId() : null;
        
        // 4.1. Ki·ªÉm tra tr·∫°ng th√°i
        if (phieuGiamGia.getTrangThai() == null || phieuGiamGia.getTrangThai() != 1) {
            throw new ApiException("Voucher kh√¥ng ho·∫°t ƒë·ªông", "VOUCHER_INACTIVE");
        }
        
        // 4.2. Ki·ªÉm tra ng√†y hi·ªáu l·ª±c
        if (phieuGiamGia.getNgayBatDau() != null && phieuGiamGia.getNgayBatDau().isAfter(now)) {
            throw new ApiException("Voucher ch∆∞a ƒë·∫øn th·ªùi gian hi·ªáu l·ª±c", "VOUCHER_NOT_STARTED");
        }
        if (phieuGiamGia.getNgayKetThuc() != null && phieuGiamGia.getNgayKetThuc().isBefore(now)) {
            throw new ApiException("Voucher ƒë√£ h·∫øt h·∫°n", "VOUCHER_EXPIRED");
        }
        
        // 4.3. Ki·ªÉm tra s·ªë l∆∞·ª£ng c√≤n l·∫°i
        if (phieuGiamGia.getSoLuongDung() != null && phieuGiamGia.getSoLuongDung() <= 0) {
            throw new ApiException("Voucher ƒë√£ h·∫øt l∆∞·ª£t s·ª≠ d·ª•ng", "VOUCHER_OUT_OF_STOCK");
        }
        
        // 4.4. Ki·ªÉm tra ƒëi·ªÅu ki·ªán h√≥a ƒë∆°n t·ªëi thi·ªÉu
        if (phieuGiamGia.getHoaDonToiThieu() != null && tongTien.compareTo(phieuGiamGia.getHoaDonToiThieu()) < 0) {
            throw new ApiException(
                String.format("H√≥a ƒë∆°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán. T·ªëi thi·ªÉu: %s", 
                    formatCurrency(phieuGiamGia.getHoaDonToiThieu())),
                "INSUFFICIENT_ORDER_VALUE"
            );
        }
        
        // 4.5. Ki·ªÉm tra voucher ri√™ng t∆∞
        if (Boolean.TRUE.equals(phieuGiamGia.getRiengTu())) {
            if (idKhachHang == null) {
                throw new ApiException("Voucher n√†y ch·ªâ d√†nh cho kh√°ch h√†ng th√†nh vi√™n", "VOUCHER_PRIVATE");
            }
            // TODO: N·∫øu c√≥ b·∫£ng li√™n k·∫øt, ki·ªÉm tra kh√°ch h√†ng c√≥ quy·ªÅn d√πng voucher n√†y kh√¥ng
        }
    }
    
    /**
     * T√≠nh to√°n s·ªë ti·ªÅn gi·∫£m d·ª±a tr√™n voucher v√† t·ªïng ti·ªÅn h√≥a ƒë∆°n
     */
    private BigDecimal calculateTienGiam(PhieuGiamGia pgg, BigDecimal tongTien) {
        if (tongTien == null || tongTien.compareTo(BigDecimal.ZERO) <= 0) {
            return BigDecimal.ZERO;
        }
        
        BigDecimal tienGiam = BigDecimal.ZERO;
        
        // LoaiPhieuGiamGia: 0 = Ph·∫ßn trƒÉm, 1 = Ti·ªÅn m·∫∑t
        if (pgg.getLoaiPhieuGiamGia() != null && pgg.getLoaiPhieuGiamGia() == 0) {
            // Gi·∫£m theo ph·∫ßn trƒÉm
            if (pgg.getGiaTriGiamGia() != null && pgg.getGiaTriGiamGia().compareTo(BigDecimal.ZERO) > 0) {
                tienGiam = tongTien
                        .multiply(pgg.getGiaTriGiamGia())
                        .divide(new BigDecimal(100), 2, java.math.RoundingMode.HALF_UP);
                
                // √Åp d·ª•ng gi·ªõi h·∫°n t·ªëi ƒëa (n·∫øu c√≥)
                if (pgg.getSoTienGiamToiDa() != null && tienGiam.compareTo(pgg.getSoTienGiamToiDa()) > 0) {
                    tienGiam = pgg.getSoTienGiamToiDa();
                }
            }
        } else {
            // Gi·∫£m theo s·ªë ti·ªÅn c·ªë ƒë·ªãnh
            if (pgg.getGiaTriGiamGia() != null) {
                tienGiam = pgg.getGiaTriGiamGia();
            }
        }
        
        // Kh√¥ng ƒë∆∞·ª£c gi·∫£m nhi·ªÅu h∆°n t·ªïng ti·ªÅn h√≥a ƒë∆°n
        if (tienGiam.compareTo(tongTien) > 0) {
            tienGiam = tongTien;
        }
        
        return tienGiam;
    }
    
    /**
     * Helper: Format currency (ƒë·ªÉ hi·ªÉn th·ªã trong error message)
     */
    private String formatCurrency(BigDecimal amount) {
        if (amount == null) return "0";
        return amount.toString();
    }
}

